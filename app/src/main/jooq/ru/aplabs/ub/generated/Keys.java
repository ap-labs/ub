/*
 * This file is generated by jOOQ.
 */
package ru.aplabs.ub.generated;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import ru.aplabs.ub.generated.tables.Accounts;
import ru.aplabs.ub.generated.tables.Payments;
import ru.aplabs.ub.generated.tables.Plans;
import ru.aplabs.ub.generated.tables.Subscriptions;
import ru.aplabs.ub.generated.tables.records.AccountsRecord;
import ru.aplabs.ub.generated.tables.records.PaymentsRecord;
import ru.aplabs.ub.generated.tables.records.PlansRecord;
import ru.aplabs.ub.generated.tables.records.SubscriptionsRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1",
        "schema version:1.001"
    },
    date = "2020-06-16T23:18:53.437Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<PaymentsRecord, Long> IDENTITY_PAYMENTS = Identities0.IDENTITY_PAYMENTS;
    public static final Identity<SubscriptionsRecord, Long> IDENTITY_SUBSCRIPTIONS = Identities0.IDENTITY_SUBSCRIPTIONS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountsRecord> ACCOUNTS_PKEY = UniqueKeys0.ACCOUNTS_PKEY;
    public static final UniqueKey<PaymentsRecord> PAYMENTS_PKEY = UniqueKeys0.PAYMENTS_PKEY;
    public static final UniqueKey<PlansRecord> PLANS_PKEY = UniqueKeys0.PLANS_PKEY;
    public static final UniqueKey<SubscriptionsRecord> SUBSCRIPTIONS_PKEY = UniqueKeys0.SUBSCRIPTIONS_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PaymentsRecord, SubscriptionsRecord> PAYMENTS__PAYMENTS_SUBSCRIPTION_ID_FKEY = ForeignKeys0.PAYMENTS__PAYMENTS_SUBSCRIPTION_ID_FKEY;
    public static final ForeignKey<SubscriptionsRecord, AccountsRecord> SUBSCRIPTIONS__SUBSCRIPTIONS_ACCOUNT_ID_FKEY = ForeignKeys0.SUBSCRIPTIONS__SUBSCRIPTIONS_ACCOUNT_ID_FKEY;
    public static final ForeignKey<SubscriptionsRecord, PlansRecord> SUBSCRIPTIONS__SUBSCRIPTIONS_PLAN_ID_FKEY = ForeignKeys0.SUBSCRIPTIONS__SUBSCRIPTIONS_PLAN_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<PaymentsRecord, Long> IDENTITY_PAYMENTS = Internal.createIdentity(Payments.PAYMENTS, Payments.PAYMENTS.ID);
        public static Identity<SubscriptionsRecord, Long> IDENTITY_SUBSCRIPTIONS = Internal.createIdentity(Subscriptions.SUBSCRIPTIONS, Subscriptions.SUBSCRIPTIONS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountsRecord> ACCOUNTS_PKEY = Internal.createUniqueKey(Accounts.ACCOUNTS, "accounts_pkey", new TableField[] { Accounts.ACCOUNTS.ID }, true);
        public static final UniqueKey<PaymentsRecord> PAYMENTS_PKEY = Internal.createUniqueKey(Payments.PAYMENTS, "payments_pkey", new TableField[] { Payments.PAYMENTS.ID }, true);
        public static final UniqueKey<PlansRecord> PLANS_PKEY = Internal.createUniqueKey(Plans.PLANS, "plans_pkey", new TableField[] { Plans.PLANS.ID }, true);
        public static final UniqueKey<SubscriptionsRecord> SUBSCRIPTIONS_PKEY = Internal.createUniqueKey(Subscriptions.SUBSCRIPTIONS, "subscriptions_pkey", new TableField[] { Subscriptions.SUBSCRIPTIONS.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<PaymentsRecord, SubscriptionsRecord> PAYMENTS__PAYMENTS_SUBSCRIPTION_ID_FKEY = Internal.createForeignKey(Keys.SUBSCRIPTIONS_PKEY, Payments.PAYMENTS, "payments_subscription_id_fkey", new TableField[] { Payments.PAYMENTS.SUBSCRIPTION_ID }, true);
        public static final ForeignKey<SubscriptionsRecord, AccountsRecord> SUBSCRIPTIONS__SUBSCRIPTIONS_ACCOUNT_ID_FKEY = Internal.createForeignKey(Keys.ACCOUNTS_PKEY, Subscriptions.SUBSCRIPTIONS, "subscriptions_account_id_fkey", new TableField[] { Subscriptions.SUBSCRIPTIONS.ACCOUNT_ID }, true);
        public static final ForeignKey<SubscriptionsRecord, PlansRecord> SUBSCRIPTIONS__SUBSCRIPTIONS_PLAN_ID_FKEY = Internal.createForeignKey(Keys.PLANS_PKEY, Subscriptions.SUBSCRIPTIONS, "subscriptions_plan_id_fkey", new TableField[] { Subscriptions.SUBSCRIPTIONS.PLAN_ID }, true);
    }
}
